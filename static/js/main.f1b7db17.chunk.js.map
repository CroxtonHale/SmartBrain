{"version":3,"sources":["Components/Navigation/Navigation.js","Components/Logo/Logo.js","Components/ImageLinkForm/ImageLinkForm.js","Components/FaceRecognition/FaceRecognition.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","className","onClick","Logo","options","max","style","height","width","alt","src","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","FaceRecognition","imageURL","box","boxes","imageHeight","i","length","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","id","app","Clarifai","App","apiKey","particlesOptions","particles","line_linked","shadow","enable","color","blur","event","setState","input","target","value","state","models","predict","FACE_DETECT_MODEL","then","response","displayFaceBox","calculateFaceLocation","catch","err","console","log","data","image","document","getElementById","Number","boundingBox","boxValues","outputs","regions","region_info","bounding_box","left_col","top_row","right_col","bottom_row","route","params","this","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f1b7db17.chunk.js","sourcesContent":["const Navigation = ({onRouteChange, isSignedIn}) => {\r\n\r\n\t\tif (isSignedIn) {\r\n\t\t\treturn (\r\n\t\t\t\t<nav className='Navigation-div flex justify-end'>\r\n\t\t\t\t\t<p onClick={() => onRouteChange('signOut')}  className='navigation f3 link underline pa3 pointer '>{/* Sign Out */}</p>\r\n\t\t\t\t</nav>\r\n\t\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn(\r\n\t\t\t\t<nav className='Navigation-div flex justify-end'>\r\n\t\t\t\t\t<p onClick={() => onRouteChange('signIn')}  className='navigation f3 link underline pa3 pointer '>{/* Sign In */}</p>\r\n\t\t\t\t\t<p onClick={() => onRouteChange('Register')}  className='navigation f3 link underline pa3 pointer '>{/* Register */}</p>\r\n\t\t\t\t</nav>\r\n\t\t\t\t);\r\n\t\t}\r\n\t\t\r\n\r\n\r\n\t\r\n}\r\n\r\nexport default Navigation","import Tilt from 'react-tilt'\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n\treturn (\r\n\t\t<div className='logo ma4 mt0 flex justify-center center'>\r\n\t\t\t<Tilt className=\"Tilt br4 \" options={{ max : 40 }} style={{ height: 150, width: 150 }} >\r\n\t\t\t\t<div className=\"Tilt-inner pa3\" style={{ height: 150, width: 150 }}> \r\n\t\t\t\t\t<Tilt className=\"Tilt-secondary br4 center mt2 \" options={{ max : 60 }} style={{ height: 100, width: 100 }} >\r\n\t\t\t\t\t\t<div className=\"Tilt-inner\" style={{ height: 100, width: 100 }}> \r\n\t\t\t\t\t\t\t<img  className='brain-logo' alt='Logo of a brain'src=\"https://img.icons8.com/carbon-copy/100/000000/brain.png\"/> \r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Tilt>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</Tilt>\r\n\t\t</div>\r\n\t);\r\n\t\r\n}\r\n\r\nexport default Logo","import './ImageLinkForm.css';\r\n\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n\treturn (\r\n\t\t<div className='imageLinkForm center'>\r\n\t\t\t<div className=\"center flex justify-center f3 w-70\">\r\n\t\t\t\t<p className='app-discription pa1 br4  shadow-1'>\r\n\t\t\t\t\t{'This Magic Brain will detect faces in your pictures. Give it a try.'}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<div className='search-bar shadow-1 pa3 br4 ma1 w-70 center'>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\tclassName='f4 pa1 w-70 center br3' \r\n\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\tonChange={onInputChange}/>\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\tclassName='tc f3 w-30 link ph3 br3 dib white' \r\n\t\t\t\t\t\tonClick={onButtonSubmit}\r\n\t\t\t\t\t>Detect</button>\r\n\t\t\t\t\t<div className=\"searchHint\">\r\n\t\t\t\t\t\t<p> Input an image link ending in a valid image extension (i.e. \".jpg .png \")</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\t\r\n}\r\n\r\nexport default ImageLinkForm","import './FaceRecognition.css';\r\nimport Tilt from 'react-tilt'\r\n\r\n\r\n\r\nconst FaceRecognition = ({imageURL, box, imageHeight}) => {\r\n\r\nlet boxes=[];\r\nlet i =0;\r\n\r\n\r\nfor (i; i < box.length ; i++) {\r\n\tboxes[i] = <div \r\n\t\t\t\t\tkey={i}\r\n\t\t\t\t\tclassName='bounding-box' \r\n\t\t\t\t\tstyle={{top:box[i].topRow, right:box[i].rightCol, bottom:box[i].bottomRow, left:box[i].leftCol}}>\r\n\t\t\t\t</div>\t\r\n}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"dib\">\r\n\t\t\t\t<Tilt className=\"Tilt-secondary br4 center\" options={{ max : 25 }} style={{ width: 500 }} >\r\n\t\t\t\t\t<div className=\"Tilt-inner\" style={{ height: 100, width: 500 }}> \r\n\t\t\t\t\t\t<div className='FaceRecognition center'>\r\n\t\t\t\t\t\t\t<img id='inputImage' className='center br4 shadow-1'  src={imageURL} alt='' width='500px' height='auto'/>\r\n\t\t\t\t\t\t\t{boxes}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\t</Tilt>\r\n\t\t\t\t<div className=\"buffer\">\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t);\r\n}\r\n\r\nexport default FaceRecognition","// Importing react and the CSS for  APP.js\nimport React from 'react';\nimport './App.css';\n\n//External libraries\nimport Particles from 'react-particles-js';\nimport Clarifai from'clarifai';\n\n// Components import\nimport Navigation from '../Components/Navigation/Navigation.js';\nimport Logo from '../Components/Logo/Logo.js';\nimport ImageLinkForm from '../Components/ImageLinkForm/ImageLinkForm.js';\nimport Rank from '../Components/Rank/Rank.js';\nimport FaceRecognition from '../Components/FaceRecognition/FaceRecognition.js';\nimport SignIn from '../Components/SignIn/SignIn.js';\nimport Register from '../Components/Register/Register.js';\n\n\n\n/*\n  Declaring a constant for the apiKey to be used \n  in clarifai API (syntax provided by Clarifai API)\n*/\nconst app = new Clarifai.App({\n apiKey: 'a7b89eb37a144e13b9641255eeba5c90'\n});\n\n/*\n  Declaring constact for background particles\n  options, to be used in render() \n*/\nconst particlesOptions = {\n  particles: {\n    line_linked: {\n      shadow: {\n        enable: true,\n        color: \"#3CA9D1\",\n        blur: 5\n      }\n    }\n  }\n}\n\n\n// Start of the App\n\nclass App extends React.Component{\n\n/*\n  constructor for state using super()\n  states used are as follows:\n  - input: used for the input url and to send the URL to clarifai API\n  - imageURL: used display the image to be investigated\n  - box: an array used to store the values for the borders of detected faces\n  - imageHeight: height of the image displayed, used to fix height of Tilt of imageURL\n\n  PS: {imageURL, box, imageHeight} are all passed to <FaceRecognition/> as props.\n*/\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageURL: '',\n      box: [],\n      imageHeight:'',\n      route: 'Home',\n      isSignedIn: false,\n\n    }\n  }\n\n\n\n\n/*\n  Created functions as follows:\n    onInputChange:\n      Updates this.state.input with the input from \n      <imageLinkForm/> , which is the URL input by\n      the user\n    onButtonSubmit:\n      Triggers on clicking the (Detect) button.\n      Updates this.state.imageURL with the input \n      from the User.\n      Resets this.state.box to clear older values.\n      Sends the URL of the image to Clarifai API and\n      passes the respons to calculateFaceLocation() \n      function.\n    calculateFaceLocation:\n      Uses DOM to obtain the height and width of the\n      displayed image.\n      Uses the width and height along with the response\n      from Clarifai API to calculate the position of \n      the bounding boxes of the detected faces.\n      Uses arrays to itterate over each detected \n      face/bounding-box which are obtained from \n      Clarifai API response.\n      Passed the calculated positions to displayFaceBox()\n    displayFaceBox:\n      Updates this.state.box with the objects/bounding-boxes \n      obtained from calculateFacelocation().\n\n*/\n\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value})\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageURL: this.state.input});\n    this.setState({box: []})\n    app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL ,\n        this.state.input)\n          .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n            .catch(err => console.log(err));\n  }\n  \n  calculateFaceLocation = (data) => {\n    const image= document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n\n    let boundingBox = [];\n    let boxValues= [];\n\n    for(let i=0; i<data.outputs[0].data.regions.length; i++){\n      boundingBox[i] = data.outputs[0].data.regions[i].region_info.bounding_box;\n    \n      boxValues[i] = {\n        leftCol: boundingBox[i].left_col * width,\n        topRow: boundingBox[i].top_row * height,\n        rightCol: width - (boundingBox[i].right_col * width),\n        bottomRow: height - (boundingBox[i].bottom_row * height)\n      }\n       console.log('image height',height,'state image height', this.state.imageHeight);\n     }\n     return boxValues;\n\n  }\n\n  displayFaceBox = (box) =>{\n    this.setState({box:box});\n  }\n  onRouteChange = (route) => {\n   \n    if (route === 'signOut') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'Home'){\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route});\n  }\n\n  \n/*\n  Main display of the app using render()\n  Components used:\n    <Particles/>: \n      The moving background with connected lines.\n      Component imported from an external library\n    <Navigation/>:\n      The navigation bar component.\n    <Logo/>:\n      The brain logo of the app.\n    <Rank/>:\n      Display of the username and rank.\n      Currently static (hardcoded)\n    <ImageLinkForm/>:\n      The search bar and detect button component.\n      {onInputChange(), inButtonSubmit()} functions\n      are passed into this component and are used as \n      an input for the APP\n    <FaceREcognition/>:\n      Used to display the image and the bounding boxes\n      of all the detected faces.\n      {imageURL, box, imageHeight} are passed into this\n      component to change the ImageURl, positions of \n      bounding boxes and height of Tilt respectively.\n\n*/\n\n  render(){\n    return(\n      <div className='App'>\n        <Particles \n          className='particles'\n          params={particlesOptions}\n        />\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange}/>\n       {/* {this.state.route === 'Home'\n          ?*/} <div>\n              <Logo/>\n              {/*<Rank/>*/}\n              <ImageLinkForm \n                onInputChange={this.onInputChange} \n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition \n                imageURL={this.state.imageURL}\n                box={this.state.box}\n                imageHeight={this.state.imageHeight}\n              />\n\n             </div>\n          {/*: (\n              this.state.route === 'Register'\n              ? <Register onRouteChange={this.onRouteChange}/> \n              : <SignIn onRouteChange={this.onRouteChange}/>\n            )*/}\n\n\n        \n          }\n        \n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}